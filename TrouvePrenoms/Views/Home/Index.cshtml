@model PrenomsViewModel
<div class="content">
    <p>
        Le site <strong>simple</strong> et <strong>sans fioritures</strong> pour aider les futurs parents à trouver un <strong>prénom</strong> !<br />
        <strong>@(PrenomsViewModel.PRENOMS_COUNT * 2) prénoms par jour :</strong> @PrenomsViewModel.PRENOMS_COUNT garçons / @PrenomsViewModel.PRENOMS_COUNT filles
    </p>
    <p></p>
</div>
<div class="content">
    <h2>Critères du jour</h2>
    <ul>
        <li>prénoms de @Model.Criteria.MinYear à @Model.Criteria.MaxYear</li>
        @if (Model.Criteria.MinOccurences >= 0)
        {
            <li>au moins @Model.Criteria.MinOccurences occurence@(Model.Criteria.MinOccurences > 1 ? "s" : "")</li>
        }
        @if (Model.Criteria.MaxOccurences >= 0)
        {
            <li>maximum @Model.Criteria.MaxOccurences occurence@(Model.Criteria.MaxOccurences > 1 ? "s" : "")</li>
        }
    </ul>
</div>
<div class="content">
    <h3>Garçons</h3>
    <div class="pure-g">
        @foreach (var g in Model.Boys)
        {
            Html.RenderPartial("_PrenomWidget", g);
        }
    </div>
</div>
<div class="content">
    <h3>Filles</h3>
    <div class="pure-g">
        @foreach (var f in Model.Girls)
        {
            Html.RenderPartial("_PrenomWidget", f);
        }
    </div>
</div>
<div class="content">
    <a class="button button-secondary pure-button"
       href="@Url.Action("CustomDate", "Home" , new { dateString=Model.PreviousDateString })">
        &laquo;&nbsp;Jour précédent
    </a>
    <a class="button button-secondary pure-button"
       href="#">
        @Model.DateString
    </a>
    @if (Model.IsTodayOrFuture == false)
    {
        <a class="button button-secondary pure-button"
           href="@Url.Action("CustomDate", "Home", new { dateString = Model.NextDateString })">
            &raquo;&nbsp;Jour suivant
        </a>
    }
</div>
