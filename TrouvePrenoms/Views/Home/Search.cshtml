@model SearchViewModel

<div class="container">
    <h2>Recherche avancée</h2>

    <form class="form-inline" action="@Url.Action("Search", "Home")" method="get">
        <div class="form-group">
            <label for="minYear">Entre</label>
            <input type="number" name="minYear" value="@Model.Criteria.MinYear" />
        </div>
        <div class="form-group">
            <label for="maxYear"> et </label>
            <input type="number" name="maxYear" value="@Model.Criteria.MaxYear" />
        </div>
        <div class="form-group">
            <label for="minOccurences">
                min x
            </label>
            <input type="number" name="minOccurences" value="@(Model.Criteria.MinOccurences >= 0 ? @Model.Criteria.MinOccurences.ToString() : "")" />
        </div>
        <div class="form-group">
            <label for="maxOccurences">
                max x
            </label>
            <input type="number" name="maxOccurences" value="@(Model.Criteria.MaxOccurences >= 0 ? @Model.Criteria.MaxOccurences.ToString() : "")" />
        </div>
        <div class="form-group">
            <label for="sex">
                sexe
            </label>
            <select name="sex">
                <!option value="0" @(Model.Sex <= 0 ? "selected" : "")>Tous</!option>
                <!option value="@Prenom.BOY" @(Model.Sex == Prenom.BOY ? "selected" : "")>Garçon</!option>
                <!option value="@Prenom.GIRL" @(Model.Sex == Prenom.GIRL ? "selected" : "")>Fille</!option>
            </select>
        </div>

        <button type="submit" class="btn btn-primary">Rechercher</button>
    </form>


    <h3>Résultats - @Model.Results.Length prénom@(Model.Results.Length > 1 ? "s" : "") (@Model.TotalCount résultats en tout) </h3>
    <div class="row">
        @foreach (var g in Model.Results)
        {
            Html.RenderPartial("_PrenomWidget", g);
        }
    </div>

    <nav>
        <ul class="pagination justify-content-center">
            @if (Model.Page > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Search", "Home", Model.GetPagination(-1))">
                        <span aria-hidden="true">&laquo;&nbsp;@(Model.Page - 1)</span>
                    </a>
                </li>
            }
            <li class="page-item active"><a class="page-link" href="#">@Model.Page</a></li>
            @if (Model.Page < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Search", "Home", Model.GetPagination(+1))">
                        <span aria-hidden="true">@(Model.Page + 1)&nbsp;&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>

</div>
